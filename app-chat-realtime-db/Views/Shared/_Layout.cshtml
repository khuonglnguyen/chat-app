<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - My ASP.NET Application</title>

    <script src="~/Scripts/modernizr-2.8.3.js"></script>
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <link href="~/Content/Site.css" rel="stylesheet" />


    <script src="~/Scripts/jquery-3.4.1.js"></script>
    <script src="https://use.fontawesome.com/2145adbb48.js"></script>

    <script src="~/Scripts/jquery.signalR-2.4.2.js"></script>
    <script type="text/javascript" src="~/signalr/hubs"></script>
</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("Application name", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <ul class="nav navbar-nav navbar-right">
                @if (User.Identity.IsAuthenticated)
                {
                    <li><a href="#"><span class="glyphicon glyphicon-user"></span>@GetUsername(int.Parse(User.Identity.Name))</a></li>
                    <li><a href="@Url.Action("Logout","Home")"><span class="glyphicon glyphicon-log-out"></span>Logout</a></li>
                }
            </ul>
        </div>
    </div>
    <div class="container-fluid">
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - My ASP.NET Application</p>
        </footer>
    </div>
</body>
</html>

@functions{
    app_chat_realtime_db.Models.ChatAppEntities _context = new app_chat_realtime_db.Models.ChatAppEntities();
    public string GetUsername(int userId)
    {
        return _context.Users.ToList().FirstOrDefault(x => x.Id == userId)?.Fullname;
    }
}
